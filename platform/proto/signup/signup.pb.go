// Code generated by protoc-gen-go. DO NOT EDIT.
// source: platform/proto/signup/signup.proto

package service_signup

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendVerificationEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendVerificationEmailRequest) Reset()         { *m = SendVerificationEmailRequest{} }
func (m *SendVerificationEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendVerificationEmailRequest) ProtoMessage()    {}
func (*SendVerificationEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{0}
}

func (m *SendVerificationEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendVerificationEmailRequest.Unmarshal(m, b)
}
func (m *SendVerificationEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendVerificationEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendVerificationEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendVerificationEmailRequest.Merge(m, src)
}
func (m *SendVerificationEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendVerificationEmailRequest.Size(m)
}
func (m *SendVerificationEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendVerificationEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendVerificationEmailRequest proto.InternalMessageInfo

func (m *SendVerificationEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SendVerificationEmailResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendVerificationEmailResponse) Reset()         { *m = SendVerificationEmailResponse{} }
func (m *SendVerificationEmailResponse) String() string { return proto.CompactTextString(m) }
func (*SendVerificationEmailResponse) ProtoMessage()    {}
func (*SendVerificationEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{1}
}

func (m *SendVerificationEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendVerificationEmailResponse.Unmarshal(m, b)
}
func (m *SendVerificationEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendVerificationEmailResponse.Marshal(b, m, deterministic)
}
func (m *SendVerificationEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendVerificationEmailResponse.Merge(m, src)
}
func (m *SendVerificationEmailResponse) XXX_Size() int {
	return xxx_messageInfo_SendVerificationEmailResponse.Size(m)
}
func (m *SendVerificationEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendVerificationEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendVerificationEmailResponse proto.InternalMessageInfo

type VerifyRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Email token that was received in an email.
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{2}
}

func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (m *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(m, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type VerifyResponse struct {
	// Auth token to be saved into `~/.micro`
	// For users who are already registered and paid,
	// the flow stops here.
	// For users who are yet to be registered
	// the token will be acquired in the `FinishSignup` step.
	AuthToken *AuthToken `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
	// Payment provider custommer id that can be used to
	// acquire a payment method, see `micro login` flow for more.
	// @todo this is likely not needed
	CustomerID string `protobuf:"bytes,2,opt,name=customerID,proto3" json:"customerID,omitempty"`
	// Namespace
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Message returned from the service to display to user
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Whether payment is required or not
	PaymentRequired      bool     `protobuf:"varint,5,opt,name=payment_required,json=paymentRequired,proto3" json:"payment_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyResponse) Reset()         { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()    {}
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{3}
}

func (m *VerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResponse.Unmarshal(m, b)
}
func (m *VerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResponse.Marshal(b, m, deterministic)
}
func (m *VerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResponse.Merge(m, src)
}
func (m *VerifyResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyResponse.Size(m)
}
func (m *VerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResponse proto.InternalMessageInfo

func (m *VerifyResponse) GetAuthToken() *AuthToken {
	if m != nil {
		return m.AuthToken
	}
	return nil
}

func (m *VerifyResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *VerifyResponse) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VerifyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *VerifyResponse) GetPaymentRequired() bool {
	if m != nil {
		return m.PaymentRequired
	}
	return false
}

type CompleteSignupRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The token has to be passed here too for identification purposes.
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// This payment method ID is the one we got back from Stripe on the frontend (ie. `m3o.com/subscribe.html`)
	PaymentMethodID string `protobuf:"bytes,3,opt,name=paymentMethodID,proto3" json:"paymentMethodID,omitempty"`
	// The secret/password to use for the account
	Secret               string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteSignupRequest) Reset()         { *m = CompleteSignupRequest{} }
func (m *CompleteSignupRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteSignupRequest) ProtoMessage()    {}
func (*CompleteSignupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{4}
}

func (m *CompleteSignupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteSignupRequest.Unmarshal(m, b)
}
func (m *CompleteSignupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteSignupRequest.Marshal(b, m, deterministic)
}
func (m *CompleteSignupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteSignupRequest.Merge(m, src)
}
func (m *CompleteSignupRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteSignupRequest.Size(m)
}
func (m *CompleteSignupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteSignupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteSignupRequest proto.InternalMessageInfo

func (m *CompleteSignupRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CompleteSignupRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CompleteSignupRequest) GetPaymentMethodID() string {
	if m != nil {
		return m.PaymentMethodID
	}
	return ""
}

func (m *CompleteSignupRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type CompleteSignupResponse struct {
	AuthToken            *AuthToken `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
	Namespace            string     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompleteSignupResponse) Reset()         { *m = CompleteSignupResponse{} }
func (m *CompleteSignupResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteSignupResponse) ProtoMessage()    {}
func (*CompleteSignupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{5}
}

func (m *CompleteSignupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteSignupResponse.Unmarshal(m, b)
}
func (m *CompleteSignupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteSignupResponse.Marshal(b, m, deterministic)
}
func (m *CompleteSignupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteSignupResponse.Merge(m, src)
}
func (m *CompleteSignupResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteSignupResponse.Size(m)
}
func (m *CompleteSignupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteSignupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteSignupResponse proto.InternalMessageInfo

func (m *CompleteSignupResponse) GetAuthToken() *AuthToken {
	if m != nil {
		return m.AuthToken
	}
	return nil
}

func (m *CompleteSignupResponse) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// lifted from https://github.com/micro/go-micro/blob/master/auth/service/proto/auth.proto
type AuthToken struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Created              int64    `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Expiry               int64    `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthToken) Reset()         { *m = AuthToken{} }
func (m *AuthToken) String() string { return proto.CompactTextString(m) }
func (*AuthToken) ProtoMessage()    {}
func (*AuthToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_cedfcfc2710e4c43, []int{6}
}

func (m *AuthToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthToken.Unmarshal(m, b)
}
func (m *AuthToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthToken.Marshal(b, m, deterministic)
}
func (m *AuthToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthToken.Merge(m, src)
}
func (m *AuthToken) XXX_Size() int {
	return xxx_messageInfo_AuthToken.Size(m)
}
func (m *AuthToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthToken.DiscardUnknown(m)
}

var xxx_messageInfo_AuthToken proto.InternalMessageInfo

func (m *AuthToken) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AuthToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AuthToken) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *AuthToken) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func init() {
	proto.RegisterType((*SendVerificationEmailRequest)(nil), "service.signup.SendVerificationEmailRequest")
	proto.RegisterType((*SendVerificationEmailResponse)(nil), "service.signup.SendVerificationEmailResponse")
	proto.RegisterType((*VerifyRequest)(nil), "service.signup.VerifyRequest")
	proto.RegisterType((*VerifyResponse)(nil), "service.signup.VerifyResponse")
	proto.RegisterType((*CompleteSignupRequest)(nil), "service.signup.CompleteSignupRequest")
	proto.RegisterType((*CompleteSignupResponse)(nil), "service.signup.CompleteSignupResponse")
	proto.RegisterType((*AuthToken)(nil), "service.signup.AuthToken")
}

func init() { proto.RegisterFile("platform/proto/signup/signup.proto", fileDescriptor_cedfcfc2710e4c43) }

var fileDescriptor_cedfcfc2710e4c43 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x55, 0x5a, 0xd6, 0x91, 0xbb, 0xad, 0x20, 0x8b, 0x4d, 0xa1, 0xda, 0xc6, 0x08, 0x02, 0x15,
	0x09, 0x32, 0x69, 0x20, 0xf1, 0xc0, 0x13, 0x62, 0x08, 0xed, 0x81, 0x17, 0x0f, 0xf1, 0x1a, 0x19,
	0xe7, 0x76, 0xb5, 0x68, 0x62, 0xcf, 0x76, 0x10, 0xfd, 0x00, 0xfe, 0x85, 0x8f, 0xe1, 0xa3, 0x50,
	0x6c, 0x67, 0x5b, 0xa2, 0xad, 0x20, 0xf6, 0x54, 0x9d, 0x73, 0xcf, 0xbd, 0xbe, 0xe7, 0xd4, 0x0e,
	0xa4, 0x6a, 0xc1, 0xec, 0x4c, 0xea, 0xf2, 0x50, 0x69, 0x69, 0xe5, 0xa1, 0x11, 0x67, 0x55, 0xad,
	0xc2, 0x4f, 0xe6, 0x38, 0x32, 0x36, 0xa8, 0xbf, 0x0b, 0x8e, 0x99, 0x67, 0xd3, 0xd7, 0xb0, 0x7b,
	0x8a, 0x55, 0xf1, 0x05, 0xb5, 0x98, 0x09, 0xce, 0xac, 0x90, 0xd5, 0x87, 0x92, 0x89, 0x05, 0xc5,
	0xf3, 0x1a, 0x8d, 0x25, 0x0f, 0x60, 0x0d, 0x1b, 0x9c, 0x44, 0x07, 0xd1, 0x34, 0xa6, 0x1e, 0xa4,
	0x8f, 0x60, 0xef, 0x86, 0x2e, 0xa3, 0x64, 0x65, 0x30, 0x7d, 0x0b, 0x5b, 0xae, 0xb8, 0x5c, 0x39,
	0xa7, 0x61, 0xad, 0xfc, 0x86, 0x55, 0x32, 0xf0, 0xac, 0x03, 0xe9, 0xef, 0x08, 0xc6, 0x6d, 0xb7,
	0x9f, 0x47, 0xde, 0x40, 0xcc, 0x6a, 0x3b, 0xff, 0xec, 0xc4, 0xcd, 0x88, 0x8d, 0xa3, 0x87, 0x59,
	0xd7, 0x4a, 0xf6, 0xae, 0x15, 0xd0, 0x4b, 0x2d, 0xd9, 0x07, 0xe0, 0xb5, 0xb1, 0xb2, 0x44, 0x7d,
	0x72, 0x1c, 0x8e, 0xb9, 0xc2, 0x90, 0x5d, 0x88, 0x2b, 0x56, 0xa2, 0x51, 0x8c, 0x63, 0x32, 0x74,
	0xe5, 0x4b, 0x82, 0x24, 0xb0, 0x5e, 0xa2, 0x31, 0xec, 0x0c, 0x93, 0x3b, 0xae, 0xd6, 0x42, 0xf2,
	0x1c, 0xee, 0x2b, 0xb6, 0x2c, 0xb1, 0xb2, 0xb9, 0xc6, 0xf3, 0x5a, 0x68, 0x2c, 0x92, 0xb5, 0x83,
	0x68, 0x7a, 0x97, 0xde, 0x0b, 0x3c, 0x0d, 0x74, 0xfa, 0x33, 0x82, 0xed, 0xf7, 0xb2, 0x54, 0x0b,
	0xb4, 0x78, 0xea, 0x56, 0xfd, 0x8f, 0x50, 0xc8, 0x14, 0xda, 0xc1, 0x9f, 0xd0, 0xce, 0x65, 0x71,
	0x72, 0x1c, 0xd6, 0xed, 0xd3, 0x64, 0x07, 0x46, 0x06, 0xb9, 0x46, 0x1b, 0x76, 0x0e, 0x28, 0x95,
	0xb0, 0xd3, 0x5f, 0xe3, 0xb6, 0xe9, 0x76, 0xd2, 0x1b, 0xf4, 0xd2, 0x6b, 0x8c, 0xc7, 0x17, 0x6d,
	0xe4, 0x31, 0x6c, 0x32, 0xce, 0xd1, 0x98, 0xdc, 0x5e, 0x9c, 0x13, 0xd3, 0x0d, 0xcf, 0x79, 0xc9,
	0x13, 0xd8, 0xd2, 0x38, 0xd3, 0x68, 0xe6, 0xf9, 0xd5, 0x04, 0x36, 0x03, 0xe9, 0x45, 0x09, 0xac,
	0x73, 0x8d, 0xcc, 0x62, 0xe1, 0x02, 0x18, 0xd2, 0x16, 0x36, 0xc6, 0xf1, 0x87, 0x12, 0x7a, 0xe9,
	0x8c, 0x0f, 0x69, 0x40, 0x47, 0xbf, 0x06, 0x30, 0xf2, 0x8e, 0x89, 0x85, 0xed, 0x6b, 0x2f, 0x2e,
	0x79, 0xd1, 0xf7, 0xbb, 0xea, 0x55, 0x4c, 0x5e, 0xfe, 0xa3, 0x3a, 0xe4, 0xfb, 0x11, 0x46, 0xfe,
	0x3e, 0x93, 0xbd, 0x7e, 0x63, 0xe7, 0x95, 0x4c, 0xf6, 0x6f, 0x2a, 0x87, 0x41, 0x39, 0x8c, 0xbb,
	0x7f, 0x21, 0x79, 0xda, 0xef, 0xb8, 0xf6, 0xa6, 0x4d, 0x9e, 0xfd, 0x4d, 0xe6, 0x0f, 0xf8, 0x3a,
	0x72, 0x5f, 0x89, 0x57, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xab, 0x01, 0xa5, 0x8f, 0x4b, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SignupClient is the client API for Signup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignupClient interface {
	// Send a verification email
	SendVerificationEmail(ctx context.Context, in *SendVerificationEmailRequest, opts ...grpc.CallOption) (*SendVerificationEmailResponse, error)
	// Verify a user who's been sent an email
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	// Complete the signup process
	CompleteSignup(ctx context.Context, in *CompleteSignupRequest, opts ...grpc.CallOption) (*CompleteSignupResponse, error)
}

type signupClient struct {
	cc *grpc.ClientConn
}

func NewSignupClient(cc *grpc.ClientConn) SignupClient {
	return &signupClient{cc}
}

func (c *signupClient) SendVerificationEmail(ctx context.Context, in *SendVerificationEmailRequest, opts ...grpc.CallOption) (*SendVerificationEmailResponse, error) {
	out := new(SendVerificationEmailResponse)
	err := c.cc.Invoke(ctx, "/service.signup.Signup/SendVerificationEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signupClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/service.signup.Signup/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signupClient) CompleteSignup(ctx context.Context, in *CompleteSignupRequest, opts ...grpc.CallOption) (*CompleteSignupResponse, error) {
	out := new(CompleteSignupResponse)
	err := c.cc.Invoke(ctx, "/service.signup.Signup/CompleteSignup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignupServer is the server API for Signup service.
type SignupServer interface {
	// Send a verification email
	SendVerificationEmail(context.Context, *SendVerificationEmailRequest) (*SendVerificationEmailResponse, error)
	// Verify a user who's been sent an email
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
	// Complete the signup process
	CompleteSignup(context.Context, *CompleteSignupRequest) (*CompleteSignupResponse, error)
}

// UnimplementedSignupServer can be embedded to have forward compatible implementations.
type UnimplementedSignupServer struct {
}

func (*UnimplementedSignupServer) SendVerificationEmail(ctx context.Context, req *SendVerificationEmailRequest) (*SendVerificationEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendVerificationEmail not implemented")
}
func (*UnimplementedSignupServer) Verify(ctx context.Context, req *VerifyRequest) (*VerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (*UnimplementedSignupServer) CompleteSignup(ctx context.Context, req *CompleteSignupRequest) (*CompleteSignupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteSignup not implemented")
}

func RegisterSignupServer(s *grpc.Server, srv SignupServer) {
	s.RegisterService(&_Signup_serviceDesc, srv)
}

func _Signup_SendVerificationEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendVerificationEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignupServer).SendVerificationEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.signup.Signup/SendVerificationEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignupServer).SendVerificationEmail(ctx, req.(*SendVerificationEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signup_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignupServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.signup.Signup/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignupServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signup_CompleteSignup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteSignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignupServer).CompleteSignup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.signup.Signup/CompleteSignup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignupServer).CompleteSignup(ctx, req.(*CompleteSignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.signup.Signup",
	HandlerType: (*SignupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendVerificationEmail",
			Handler:    _Signup_SendVerificationEmail_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Signup_Verify_Handler,
		},
		{
			MethodName: "CompleteSignup",
			Handler:    _Signup_CompleteSignup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "platform/proto/signup/signup.proto",
}
