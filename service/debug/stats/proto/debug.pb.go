// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/debug/stats/proto/debug.proto

package debug_stats

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Service describes a service running in the micro network.
type Service struct {
	// Service name, e.g. greeter
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Node                 *Node    `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Service) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

// Node describes a single instance of a service.
type Node struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Snapshot is a snapshot of Debug.Stats from a particular service when called.
type Snapshot struct {
	Service *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// Unix timestamp, e.g. 1575561487
	Started int64 `protobuf:"varint,2,opt,name=started,proto3" json:"started,omitempty"`
	// Uptime in seconds
	Uptime uint64 `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Heap allocated in bytes (TODO: change to resident set size)
	Memory uint64 `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	// Number of Goroutines
	Threads uint64 `protobuf:"varint,5,opt,name=threads,proto3" json:"threads,omitempty"`
	// GC Pause total in ns
	Gc uint64 `protobuf:"varint,6,opt,name=gc,proto3" json:"gc,omitempty"`
	// Total number of request
	Requests uint64 `protobuf:"varint,7,opt,name=requests,proto3" json:"requests,omitempty"`
	// Total number of errors
	Errors uint64 `protobuf:"varint,8,opt,name=errors,proto3" json:"errors,omitempty"`
	// Timestamp at the time of the taking of the snapshot, seconds since unix epoch
	Timestamp            uint64   `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{2}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Snapshot) GetStarted() int64 {
	if m != nil {
		return m.Started
	}
	return 0
}

func (m *Snapshot) GetUptime() uint64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Snapshot) GetMemory() uint64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Snapshot) GetThreads() uint64 {
	if m != nil {
		return m.Threads
	}
	return 0
}

func (m *Snapshot) GetGc() uint64 {
	if m != nil {
		return m.Gc
	}
	return 0
}

func (m *Snapshot) GetRequests() uint64 {
	if m != nil {
		return m.Requests
	}
	return 0
}

func (m *Snapshot) GetErrors() uint64 {
	if m != nil {
		return m.Errors
	}
	return 0
}

func (m *Snapshot) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ReadRequest struct {
	// If set, only return services matching the filter
	Service *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// If false, only the current snapshots will be returned.
	// If true, all historical snapshots in memory will be returned.
	Past                 bool     `protobuf:"varint,2,opt,name=past,proto3" json:"past,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{3}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ReadRequest) GetPast() bool {
	if m != nil {
		return m.Past
	}
	return false
}

type ReadResponse struct {
	Stats                []*Snapshot `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{4}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetStats() []*Snapshot {
	if m != nil {
		return m.Stats
	}
	return nil
}

type WriteRequest struct {
	// If set, only return services matching the filter
	Service *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// snapshot to write
	Stats                *Snapshot `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{5}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *WriteRequest) GetStats() *Snapshot {
	if m != nil {
		return m.Stats
	}
	return nil
}

type WriteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{6}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

type StreamRequest struct {
	// If set, only return services matching the filter
	Service *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// If set, only return services matching the namespace
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{7}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *StreamRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type StreamResponse struct {
	Stats                []*Snapshot `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e3fdf8f8357f30, []int{8}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetStats() []*Snapshot {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "debug.stats.Service")
	proto.RegisterType((*Node)(nil), "debug.stats.Node")
	proto.RegisterType((*Snapshot)(nil), "debug.stats.Snapshot")
	proto.RegisterType((*ReadRequest)(nil), "debug.stats.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "debug.stats.ReadResponse")
	proto.RegisterType((*WriteRequest)(nil), "debug.stats.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "debug.stats.WriteResponse")
	proto.RegisterType((*StreamRequest)(nil), "debug.stats.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "debug.stats.StreamResponse")
}

func init() {
	proto.RegisterFile("service/debug/stats/proto/debug.proto", fileDescriptor_83e3fdf8f8357f30)
}

var fileDescriptor_83e3fdf8f8357f30 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x8b, 0xdb, 0x30,
	0x10, 0xc5, 0x8e, 0xf3, 0x35, 0xde, 0xdd, 0x52, 0xd1, 0x16, 0xd5, 0xdd, 0x43, 0x30, 0x2c, 0x04,
	0x0a, 0xc9, 0x92, 0x1e, 0x97, 0xf6, 0xd2, 0x7b, 0xa1, 0xca, 0xa1, 0xa7, 0x16, 0xb4, 0xd6, 0x90,
	0x35, 0xc5, 0x96, 0x2b, 0x29, 0x0b, 0xbd, 0xf5, 0xef, 0xf5, 0x5f, 0x15, 0x8d, 0xe4, 0x4d, 0x0c,
	0xa1, 0xb0, 0xb9, 0xcd, 0x7b, 0x33, 0xf3, 0x66, 0xe6, 0x59, 0x18, 0x6e, 0x2c, 0x9a, 0xc7, 0xba,
	0xc2, 0xb5, 0xc2, 0xfb, 0xfd, 0x6e, 0x6d, 0x9d, 0x74, 0x76, 0xdd, 0x19, 0xed, 0x74, 0x60, 0x56,
	0x14, 0xb3, 0x3c, 0x00, 0x4a, 0x97, 0x3f, 0x60, 0xba, 0x0d, 0x5d, 0x8c, 0x41, 0xd6, 0xca, 0x06,
	0x79, 0xb2, 0x48, 0x96, 0x73, 0x41, 0x31, 0xe3, 0x30, 0x7d, 0x44, 0x63, 0x6b, 0xdd, 0xf2, 0x94,
	0xe8, 0x1e, 0xb2, 0x1b, 0xc8, 0x5a, 0xad, 0x90, 0x8f, 0x16, 0xc9, 0x32, 0xdf, 0xbc, 0x5c, 0x1d,
	0x89, 0xae, 0xbe, 0x68, 0x85, 0x82, 0xd2, 0xe5, 0x2d, 0x64, 0x1e, 0xb1, 0x2b, 0x48, 0x6b, 0x15,
	0xa5, 0xd3, 0x5a, 0x79, 0x61, 0xa9, 0x94, 0x41, 0x6b, 0x7b, 0xe1, 0x08, 0xcb, 0x3f, 0x29, 0xcc,
	0xb6, 0xad, 0xec, 0xec, 0x83, 0x76, 0x6c, 0x05, 0xd3, 0x78, 0x14, 0xf5, 0xe6, 0x9b, 0x57, 0x83,
	0x41, 0x71, 0x75, 0xd1, 0x17, 0x79, 0x59, 0xeb, 0xa4, 0x71, 0xa8, 0x48, 0x76, 0x24, 0x7a, 0xc8,
	0xde, 0xc0, 0x64, 0xdf, 0xb9, 0xba, 0x09, 0x1b, 0x67, 0x22, 0x22, 0xcf, 0x37, 0xd8, 0x68, 0xf3,
	0x9b, 0x67, 0x81, 0x0f, 0xc8, 0x2b, 0xb9, 0x07, 0x83, 0x52, 0x59, 0x3e, 0xa6, 0x44, 0x0f, 0xfd,
	0x29, 0xbb, 0x8a, 0x4f, 0x88, 0x4c, 0x77, 0x15, 0x2b, 0x60, 0x66, 0xf0, 0xd7, 0x1e, 0xad, 0xb3,
	0x7c, 0x4a, 0xec, 0x13, 0xf6, 0xea, 0x68, 0x8c, 0x36, 0x96, 0xcf, 0x82, 0x7a, 0x40, 0xec, 0x1a,
	0xe6, 0x7e, 0xba, 0x75, 0xb2, 0xe9, 0xf8, 0x9c, 0x52, 0x07, 0xa2, 0xfc, 0x0a, 0xb9, 0x40, 0xa9,
	0x44, 0x50, 0x79, 0xb6, 0x09, 0x0c, 0xb2, 0x4e, 0x5a, 0x47, 0x0e, 0xcc, 0x04, 0xc5, 0xe5, 0x1d,
	0x5c, 0x04, 0x49, 0xdb, 0xe9, 0xd6, 0x22, 0x7b, 0x0f, 0x63, 0xea, 0xe6, 0xc9, 0x62, 0xb4, 0xcc,
	0x37, 0xaf, 0x87, 0x8a, 0xd1, 0x7e, 0x11, 0x6a, 0xca, 0x9f, 0x70, 0xf1, 0xcd, 0xd4, 0x0e, 0xcf,
	0x5d, 0xe8, 0x69, 0x58, 0x4a, 0xd5, 0xff, 0x1f, 0xf6, 0x02, 0x2e, 0xe3, 0xb0, 0xb0, 0x6a, 0xf9,
	0x1d, 0x2e, 0xb7, 0xce, 0xa0, 0x6c, 0xce, 0x1d, 0x7f, 0x0d, 0x73, 0xff, 0x98, 0x6d, 0x27, 0x2b,
	0x8c, 0xaf, 0xed, 0x40, 0x94, 0x1f, 0xe1, 0xaa, 0x97, 0x3f, 0xc3, 0x9b, 0xcd, 0xdf, 0x04, 0xc6,
	0x5b, 0x1f, 0xb1, 0x3b, 0xc8, 0xbc, 0xc5, 0x8c, 0x0f, 0xea, 0x8f, 0x3e, 0x64, 0xf1, 0xf6, 0x44,
	0x26, 0xce, 0xfc, 0x04, 0x63, 0xba, 0x9a, 0x0d, 0x6b, 0x8e, 0x6d, 0x2f, 0x8a, 0x53, 0xa9, 0xd8,
	0xff, 0x19, 0x26, 0xe1, 0x0a, 0x36, 0xac, 0x1a, 0x38, 0x57, 0xbc, 0x3b, 0x99, 0x0b, 0x12, 0xb7,
	0xc9, 0xfd, 0x84, 0x7e, 0x10, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x94, 0x28, 0x2f, 0x59,
	0x49, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Stats_StreamClient, error)
}

type statsClient struct {
	cc *grpc.ClientConn
}

func NewStatsClient(cc *grpc.ClientConn) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/debug.stats.Stats/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/debug.stats.Stats/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Stats_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stats_serviceDesc.Streams[0], "/debug.stats.Stats/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &statsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stats_StreamClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type statsStreamClient struct {
	grpc.ClientStream
}

func (x *statsStreamClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatsServer is the server API for Stats service.
type StatsServer interface {
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	Stream(*StreamRequest, Stats_StreamServer) error
}

// UnimplementedStatsServer can be embedded to have forward compatible implementations.
type UnimplementedStatsServer struct {
}

func (*UnimplementedStatsServer) Read(ctx context.Context, req *ReadRequest) (*ReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedStatsServer) Write(ctx context.Context, req *WriteRequest) (*WriteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedStatsServer) Stream(req *StreamRequest, srv Stats_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterStatsServer(s *grpc.Server, srv StatsServer) {
	s.RegisterService(&_Stats_serviceDesc, srv)
}

func _Stats_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.stats.Stats/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/debug.stats.Stats/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatsServer).Stream(m, &statsStreamServer{stream})
}

type Stats_StreamServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type statsStreamServer struct {
	grpc.ServerStream
}

func (x *statsStreamServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Stats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "debug.stats.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Stats_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Stats_Write_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Stats_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service/debug/stats/proto/debug.proto",
}
