name: Integration tests
on: [push]

jobs:

  test:
    name: Integration tests
    runs-on: ubuntu-latest
    
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
      id: go

    - name: Install Protoc
      uses: arduino/setup-protoc@master

    - name: Check out code
      uses: actions/checkout@v2

    - name: Enable caching
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install micro
      run: |
        go install

    - name: Setup docker caching
      id: cache-docker
      uses: actions/cache@v2
      with:
        path: /tmp/docker-registry
        key: docker-registry-${{ hashFiles('Dockerfile') }}
    - name: Setup docker registry
      run: |
        docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
        docker pull localhost:5000/micro || true
    - name: Build docker image
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build
        docker build -f test/Dockerfile . -t micro --cache-from=localhost:5000/micro
    - name: Tag and push docker
      run: |
        docker tag micro localhost:5000/micro && docker push localhost:5000/micro || true
      if: steps.cache-docker.outputs.cache-hit != 'true'

    - name: Test micro server
      working-directory: ./test
      run: |
          # Generate keys for JWT tests
          ssh-keygen -f /tmp/sshkey -m pkcs8 -q -N ""
          ssh-keygen -f /tmp/sshkey -e  -m pkcs8 > /tmp/sshkey.pub
          go clean -testcache && go test --tags=integration -v ./...
        
